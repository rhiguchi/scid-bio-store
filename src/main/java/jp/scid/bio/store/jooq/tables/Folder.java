/**
 * This class is generated by jOOQ
 */
package jp.scid.bio.store.jooq.tables;

/**
 * This class is generated by jOOQ.
 *
 * フォルダ : フォルダとその階層構造
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.6.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings("all")
public class Folder extends org.jooq.impl.UpdatableTableImpl<jp.scid.bio.store.jooq.tables.records.FolderRecord> {

	private static final long serialVersionUID = 1141206400;

	/**
	 * The singleton instance of PUBLIC.FOLDER
	 */
	public static final jp.scid.bio.store.jooq.tables.Folder FOLDER = new jp.scid.bio.store.jooq.tables.Folder();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<jp.scid.bio.store.jooq.tables.records.FolderRecord> getRecordType() {
		return jp.scid.bio.store.jooq.tables.records.FolderRecord.class;
	}

	/**
	 * 識別子
	 * <p>
	 * This column is part of the table's PRIMARY KEY
	 */
	public final org.jooq.TableField<jp.scid.bio.store.jooq.tables.records.FolderRecord, java.lang.Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * 親の識別子
	 * <p>
	 * This column is part of a FOREIGN KEY: <code><pre>
	 * CONSTRAINT FK_FOLDER_PARENT
	 * FOREIGN KEY (PARENT_ID, PARENT_ID)
	 * REFERENCES PUBLIC.FOLDER (ID)
	 * </pre></code>
	 */
	public final org.jooq.TableField<jp.scid.bio.store.jooq.tables.records.FolderRecord, java.lang.Long> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * 名前
	 */
	public final org.jooq.TableField<jp.scid.bio.store.jooq.tables.records.FolderRecord, java.lang.String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * 構造型 : 0: 階層, 1: コレクション, 2: フィルター
	 */
	public final org.jooq.TableField<jp.scid.bio.store.jooq.tables.records.FolderRecord, java.lang.Short> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.SMALLINT, this);

	public Folder() {
		super("FOLDER", jp.scid.bio.store.jooq.Public.PUBLIC);
	}

	public Folder(java.lang.String alias) {
		super(alias, jp.scid.bio.store.jooq.Public.PUBLIC, jp.scid.bio.store.jooq.tables.Folder.FOLDER);
	}

	@Override
	public org.jooq.Identity<jp.scid.bio.store.jooq.tables.records.FolderRecord, java.lang.Long> getIdentity() {
		return jp.scid.bio.store.jooq.Keys.IDENTITY_FOLDER;
	}

	@Override
	public org.jooq.UniqueKey<jp.scid.bio.store.jooq.tables.records.FolderRecord> getMainKey() {
		return jp.scid.bio.store.jooq.Keys.CONSTRAINT_7;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<jp.scid.bio.store.jooq.tables.records.FolderRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<jp.scid.bio.store.jooq.tables.records.FolderRecord>>asList(jp.scid.bio.store.jooq.Keys.CONSTRAINT_7);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<jp.scid.bio.store.jooq.tables.records.FolderRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<jp.scid.bio.store.jooq.tables.records.FolderRecord, ?>>asList(jp.scid.bio.store.jooq.Keys.FK_FOLDER_PARENT);
	}

	@Override
	public jp.scid.bio.store.jooq.tables.Folder as(java.lang.String alias) {
		return new jp.scid.bio.store.jooq.tables.Folder(alias);
	}
}
